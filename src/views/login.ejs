<%- include('partials/header') %>

  <section class="loginPage">
    <div class="container box">
      <form action="/login" class="form" id="form" method="POST">
        <h2>Login</h2>

        <div class="form-control">
          <label for="">Email</label>
          <input type="email" name="username" placeholder="Enter Email" id="email" />
          <small>Error message</small>
        </div>

        <div class="form-control">
          <label for="">Password</label>
          <input type="password" id="password" name="password" placeholder="Enter Password" />
          <small>Error message</small>
        </div>
        <!-- Eye Icon -->
        <span class="show-pass">
          <i class="fas fa-eye" id="eye"></i>
        </span>

        <button>Submit</button>
        <a class="btn btn-dark btn-lg" href="/forgot" role="button" id="forgot-btn">Forgot password?</a>
      </form>
    </div>
  </section>
  <!--<script src="script.js"></script>-->
  <style>
    /*This contains styles for login, imported from register page and recycled for universal styling*/


    @import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap");

    /*This contains styling for text font for the form*/
    body {
      font-family: "Open Sans", sans-serif;
    }

    /*This contains styling for general colors to be used*/
    :root {
      --white: #fff;
      --black: #1c2b2d;
      --blue: #31326f;
      --light-blue: #005490;
      --color-primary: #9d0191;
      --color-sec: forestgreen;
      --grey: gainsboro;
      --dark-grey: #222831;
    }


    /*This is unversal selector styling to put everything in a box*/
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }


    /*This defines font size*/
    html {
      font-size: 10px;
    }


    /*This contains paragraph spacing*/
    p {
      font-size: 1.6rem;
      line-height: 1.5;
    }

    /*This contains styling for images*/
    img {
      width: 100%;
    }

    /*This contains styles for container*/
    .container {
      max-width: 900px;
      margin: 0 auto;
      padding: 0 20px;
    }

    /*This contains tyles for registration page*/
    .loginPage {
      height: 100vh;
      background-color: var(--grey);
      display: flex;
      justify-content: center;
      align-items: center;
    }


    /*This contains styles for box class*/
    .box {
      background-color: var(--white);
      border-radius: 5px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
      width: 40rem;
    }

    /*This contains styles for form*/
    form {
      padding: 2rem;
    }


    /*This contains styles for form h2*/
    form h2 {
      font-size: 2.5rem;
      text-align: center;
      margin-bottom: 2rem;
    }


    /*This contains styles for form-control class*/
    .form-control {
      margin-bottom: 1rem;
      padding-bottom: 1.5rem;
      position: relative;
    }


    /*This contains styles for form-control label*/
    .form-control label {
      display: block;
      margin-bottom: 5px;
      color: #777;
    }


    /*This contains styles for form-control input box*/
    .form-control input {
      /*display: block;*/
      border: 2px solid var(--grey);
      border-radius: 3px;
      width: 100%;
      padding: 1rem;
      font-size: 1.4rem;

      display: inline-block;
      position: relative;
      /*border: none;
      outline: none;*/
    }

    .form-control input:focus {
      border-color: rgba(0, 0, 0, 0.2);
    }

    /* .form-control.success input {
      border-color: green;
    } */

    .form-control.error input {
      border-color: red;
    }

    .form-control small {
      color: red;
      position: absolute;
      bottom: 0;
      left: 0;
      visibility: hidden;
    }

    /*This contains styles for form-control small icons and text*/
    .form-control.error small {
      visibility: visible;
    }

    /*This contains styles for form button*/
    form button {
      width: 100%;
      background-color: var(--color-sec);
      border: none;
      outline: none;
      color: var(--white);
      padding: 1rem;
      font-size: 1.6rem;
      margin-top: 1rem;
      border-radius: 3px;
      cursor: pointer;
    }

    /*This contains styles for form link*/ 
    form a {
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: var(--color-sec);
      border: none;
      outline: none;
      color: var(--white);
      padding: 1rem;
      font-size: 1.6rem;
      margin-top: 1rem;
      border-radius: 3px;
      cursor: pointer;
      text-decoration: none;
    }

    /*This contains style for eye icon*/
    .show-pass {
      position: absolute;
      top: 51.5%;
      right: 40%;

      display: inline-block;
    }

    /*This contains styles for eye icon*/
    .fa-eye {
      color: var(--blue);
      cursor: pointer;
    }


    /*This contains styles for password progress bar*/
    .progress {
      width: 100%;
      height: 3px;
      margin: 2rem 0;
      background-color: var(--grey);
    }


    /*This contains further styles for password progress bar*/
    .progress-bar {
      width: 5%;
      height: 3px;
      background-color: #777;
      transition: all 0.3s ease;
    }


    /*This contains styles for form-list*/
    .form-list {
      list-style-type: none;
    }

    /*This contains styles for form circle*/
    .fa-circle {
      font-size: 6px;
    }

    /*This contains styles to make the eye responsive*/
    @media screen and (max-width: 777px) {
      .show-pass {
        position: relative;
        top: -52px;
        right: -92%;
        display: inline-block;
      }

    }

    @media screen and (max-width: 1000px) {
      .show-pass {
        position: relative;
        top: -52px;
        right: -92%;
        display: inline-block;
      }

    }
  </style>

  <script>

    /* Password toggle/peak feature - OWNER: AL-TAIMEE H. */
    let state,
      password = document.getElementById("password"),
      showPassword = document.querySelector(".show-pass"),
      eyeIcon = document.querySelector("#eye");

    showPassword.addEventListener("click", toggle);
    eyeIcon.addEventListener("click", toggleEye);
    password.addEventListener("keyup", () => {
      let pass = password.value;
    });

    // Toggle password visibility
    function toggle() {
      if (state) {
        password.setAttribute("type", "password");
        state = false;
      } else {
        password.setAttribute("type", "text");
        state = true;
      }
    }

    // Toggle icon in password field
    function toggleEye() {
      eyeIcon.classList.toggle("fa-eye-slash");
    }

    /* END Password toggle/peak feature - OWNER: AL-TAIMEE H. */

    /* Email and passoword valid entry features - OWNER: OMAR F.*/
    // Declare constants
    const form = document.getElementById('form');
    const email = document.getElementById('email');
    const pass = document.getElementById('password');

    // Event listen to ensure valid entry for email and password
    form.addEventListener('submit', e => {
      verifyInputs(e);
    })

    function verifyInputs(e) {
      // user entered values for inputs of form
      const emailValue = email.value.trim();
      const passwordValue = pass.value.trim();

      // A valid email is required to login
      if (emailValue === '') {
        setFormError(email, 'You must enter an email in order to login.');
        e.preventDefault();
      } else if (!isEmail(emailValue)) {
        setFormError(email, 'Please be sure to use your real email.');
        e.preventDefault();
      } else if (!isWsuEmail(emailValue)) {
        setFormError(email, 'Please be sure to use your Wayne State email.');
        e.preventDefault();
      } else {
        setFormSuccess(email);
      }

      if (passwordValue === '') {
        setFormError(pass, "You must enter a password in order to login.")
        e.preventDefault();
      } else {
        setFormSuccess(pass);
      }

    }

    // form-control failure, a class modification if input parameters are invalid
    function setFormError(input, message) {
      const formControl = input.parentElement;
      const small = formControl.querySelector('small');

      small.innerText = message;
      formControl.className = 'form-control error'
    };

    // form-control success, a class modification if input parameters are valid
    function setFormSuccess(input) {
      const formControl = input.parentElement;
      formControl.className = 'form-control success'
    };

    // verify email entered is valid
    function isEmail(email) {
      return /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(email);
    };

    // verify user is using a wayne state email
    function isWsuEmail(email) {
      return email.includes("@wayne.edu")
    };
    /* END Email and passoword valid entry features - OWNER: OMAR F.*/

  </script>

  <%- include('partials/header') %>